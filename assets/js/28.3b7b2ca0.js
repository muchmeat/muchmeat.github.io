(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{326:function(a,t,s){"use strict";s.r(t);var n=s(14),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"jpa相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jpa相关"}},[a._v("#")]),a._v(" JPA相关")]),a._v(" "),t("p",[a._v("目前主要使用 spring-boot-starter-data-jpa，相关问题记录如下")]),a._v(" "),t("h2",{attrs:{id:"jpa实体无主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jpa实体无主键"}},[a._v("#")]),a._v(" JPA实体无主键")]),a._v(" "),t("p",[a._v("一般来说，遵循数据库设计规范的话，应该具有主键。在缺少主键的情况下该怎么办呢。尽量找到表中数据唯一的字段，将其作为JPA主键")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@Id\nprivate String jjdbh;\n")])])]),t("p",[a._v("或者按照以下思路去解决")]),a._v(" "),t("h2",{attrs:{id:"使用复合主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用复合主键"}},[a._v("#")]),a._v(" 使用复合主键")]),a._v(" "),t("p",[a._v("如果表中的列组合可以唯一标识每一行数据，可以考虑使用复合主键。在实体类中，你可以使用@EmbeddedId或@IdClass来定义复合主键。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Entity")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("YourEntity")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@EmbeddedId")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("YourCompositeKey")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 其他属性和方法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Embeddable")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("YourCompositeKey")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Serializable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" column1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" column2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// getters 和 setters")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"不使用jpa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不使用jpa"}},[a._v("#")]),a._v(" 不使用JPA")])])}),[],!1,null,null,null);t.default=e.exports}}]);