(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{342:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"进程、线程与jvm的关联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程、线程与jvm的关联"}},[this._v("#")]),this._v(" 进程、线程与jvm的关联")]),this._v(" "),t("p",[this._v("进程是程序向操作系统申请资源的基本单位。是正在执行的程序的实例。每个进程都有自己的地址空间、内存和资源、进程之间是相互独立的，它们不能访问彼此的内存。线程是进程中可独立执行的最小单元。一个进程可以有多个线程，它们共享进程的资源。线程可以独立运行，但它们共享相同的内存空间和上下文，线程切换比进程切换更快，因为它们共享相同的地址空间。线程需要完成计算，这也被称为任务，特定的线程总是在执行特定的任务。在java中，jvm中的每个java应用程序都在一个独立的进程中运行，线程与jvm存在着密切的关系，jvm可以创建和管理线程，包括现成的调度和资源分配，比如线程执行时需要的时间片就是jvm分配到。线程间的同步和通信也是基于jvm提供的线程库实现的。")])])}),[],!1,null,null,null);s.default=r.exports}}]);